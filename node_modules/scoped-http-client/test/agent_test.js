// Generated by CoffeeScript 1.10.0
(function() {
  var ScopedClient, assert, called, http, httpAgent, httpAgentCalled, https, httpsAgent, httpsAgentCalled, oldHttpFunction, oldHttpsFunction,
    slice = [].slice;

  ScopedClient = require('../src');

  http = require('http');

  https = require('https');

  assert = require('assert');

  called = 0;

  httpAgent = new http.Agent();

  httpsAgent = new https.Agent();

  httpAgentCalled = false;

  httpsAgentCalled = false;

  oldHttpFunction = httpAgent.createConnection;

  httpAgent.createConnection = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    httpAgentCalled = true;
    return oldHttpFunction.apply(httpAgent, args);
  };

  ScopedClient.create('http://localhost', {
    httpAgent: httpAgent,
    httpsAgent: httpsAgent
  }).get()(function() {
    assert.equal(true, httpAgentCalled);
    return called += 1;
  });

  oldHttpsFunction = httpsAgent.createConnection;

  httpsAgent.createConnection = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    httpsAgentCalled = true;
    return oldHttpsFunction.apply(httpsAgent, args);
  };

  ScopedClient.create('https://localhost', {
    httpAgent: httpAgent,
    httpsAgent: httpsAgent
  }).get()(function() {
    assert.equal(true, httpsAgentCalled);
    return called += 1;
  });

  process.on('exit', function() {
    return assert.equal(2, called);
  });

}).call(this);
